{"version":3,"sources":["App.module.scss","components/Entry/Entry.module.scss","constants.js","components/Column/Column.js","components/Entry/Entry.js","App.js","index.js","components/Column/Column.module.scss"],"names":["module","exports","widgets","id","content","widgetsEntries","initialDocumentEntries","droppables","title","Column","column","entries","isDropDisabled","className","cn","styles","container","droppableId","provided","snapshot","ref","innerRef","droppableProps","taskList","draggingOver","isDraggingOver","placeholder","Entry","entry","index","draggableId","draggableProps","dragHandleProps","dragging","isDragging","WIDGETS","DOCUMENT","App","useState","documentEntries","setDocumentEntries","onDragEnd","result","destination","source","start","finish","newDocumentEntries","Array","from","movingEntry","splice","uuid","type","map","entryId","document","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6843a5cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__eSJ6i\",\"document\":\"App_document__3kEIu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Entry_container__1Ish0\",\"dragging\":\"Entry_dragging__2wyyC\"};","export const widgets = {\n  'widget-1': { id: 'widget-1', content: 'Title' },\n  'widget-2': { id: 'widget-2', content: 'Author' },\n  'widget-3': { id: 'widget-3', content: 'Date' },\n  'widget-4': { id: 'widget-4', content: 'Text Block' },\n};\n\nexport const widgetsEntries = ['widget-1', 'widget-2', 'widget-3', 'widget-4'];\n\nexport const initialDocumentEntries = [];\n\nexport const droppables = {\n  'widgets': {\n    id: 'widgets',\n    title: 'Widgets',\n  },\n  'document': {\n    id: 'document',\n    title: 'Document',\n  },\n};\n","import { Droppable } from 'react-beautiful-dnd';\nimport cn from 'classnames';\n\nimport styles from './Column.module.scss';\n\nconst Column = ({ column, entries, isDropDisabled, className }) => (\n  <div className={cn(styles.container, className)}>\n    <h3 className={styles.title}>{column.title}</h3>\n    <Droppable\n      droppableId={column.id}\n      isDropDisabled={isDropDisabled}\n    >\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n          className={cn(styles.taskList, { [styles.draggingOver]: snapshot.isDraggingOver })}\n        >\n          {entries}\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  </div>\n);\n\nexport default Column;\n","import { Draggable } from 'react-beautiful-dnd';\nimport cn from 'classnames';\n\nimport styles from './Entry.module.scss';\n\nconst Entry = ({ id, entry, index }) => {\n  return (\n    <Draggable\n      draggableId={id}\n      index={index}\n    >\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className={cn(styles.container, { [styles.dragging]: snapshot.isDragging })}\n        >\n          {entry.content}\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Entry;\n","import { useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { v4 as uuid } from 'uuid';\nimport { widgets, widgetsEntries, initialDocumentEntries, droppables } from './constants';\nimport styles from './App.module.scss';\nimport Column from './components/Column/Column';\nimport Entry from './components/Entry/Entry';\n\nconst WIDGETS = 'widgets';\nconst DOCUMENT = 'document';\n\nconst App = () => {\n  const [documentEntries, setDocumentEntries] = useState(initialDocumentEntries);\n\n  /*\n  const onDragStart = () => {\n    document.body.style.color = 'orange';\n    document.body.style.transition = 'background-color 0.2s ease';\n  }\n\n  const onDragUpdate = (update) => {\n    const { destination } = update;\n    const opacity = destination\n      ? destination.index / Object.keys(data.widgets).length\n      : 0;\n    document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n  }\n  */\n\n  const onDragEnd = (result) => {\n    //document.body.style.color = 'inherit';\n    //document.body.style.backgroundColor = 'inherit';\n    const { destination, source, draggableId } = result;\n    if (!destination) return;\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\n    if (destination.droppableId === WIDGETS) return;\n\n    const start = droppables[source.droppableId] ;\n    const finish = droppables[destination.droppableId];\n\n    const newDocumentEntries = Array.from(documentEntries);\n    if (start === finish) {\n      // Dragging within the Document\n      const movingEntry = newDocumentEntries[source.index];\n      newDocumentEntries.splice(source.index, 1);\n      newDocumentEntries.splice(destination.index, 0, movingEntry);\n    } else {\n      // Dragging from Widgets to Document\n      newDocumentEntries.splice(destination.index, 0, { id: uuid(), type: draggableId });\n    }\n    setDocumentEntries(newDocumentEntries);\n  };\n\n  return (\n    <DragDropContext\n      //onDragStart={onDragStart}\n      //onDragUpdate={onDragUpdate}\n      onDragEnd={onDragEnd}\n    >\n      <div className={styles.container}>\n        <Column\n          key={WIDGETS}\n          column={droppables[WIDGETS]}\n          entries={widgetsEntries.map((entryId, index) =>\n            <Entry key={entryId} id={entryId} entry={widgets[entryId]} index={index} />\n          )}\n          isDropDisabled={true}\n        />\n        <Column\n          key={DOCUMENT}\n          className={styles.document}\n          column={droppables[DOCUMENT]}\n          entries={documentEntries.map((entry, index) =>\n            <Entry key={entry.id} id={entry.id} entry={widgets[entry.type]} index={index} />\n          )}\n        />\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Column_container__3jSDY\",\"title\":\"Column_title__3H1xg\",\"taskList\":\"Column_taskList__2g6nx\",\"draggingOver\":\"Column_draggingOver__3h8A6\"};"],"sourceRoot":""}