{"version":3,"sources":["components/Title.js","components/Author.js","components/Date.js","components/TextBlock.js","constants.js","components/Column/Column.js","components/Entry/Entry.js","App.js","index.js","components/Column/Column.module.scss","components/Entry/Entry.module.scss","App.module.scss"],"names":["Title","placeholder","Author","defaultValue","DateComponent","Date","TextBlock","multiline","minLines","widgets","id","component","content","widgetsEntries","initialDocumentEntries","droppables","title","Column","column","entries","isDropDisabled","className","cn","styles","container","droppableId","provided","snapshot","ref","innerRef","droppableProps","taskList","draggingOver","isDraggingOver","Entry","index","withDragHandle","draggableId","containerDragHandleProps","dragHandleProps","draggableProps","dragging","isDragging","draggable","dragHandle","icon","IconNames","ARROWS_VERTICAL","iconSize","WIDGETS","DOCUMENT","App","useState","documentEntries","setDocumentEntries","onDragEnd","result","destination","source","start","finish","newDocumentEntries","Array","from","movingEntry","splice","uuid","type","map","entryId","document","entry","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.299dee8c.chunk.js","sourcesContent":["import { EditableText } from '@blueprintjs/core';\n\nconst Title = () => <h1><EditableText placeholder='Title' /></h1>;\n\nexport default Title;\n","import { EditableText } from '@blueprintjs/core';\n\nconst Author = () => <h3><EditableText defaultValue='Author: Desy Kristianti (@dessskris)' /></h3>;\n\nexport default Author;\n","const DateComponent = () => <h3>Date: {Date()}</h3>;\n\nexport default DateComponent;\n","import { EditableText } from '@blueprintjs/core';\n\nconst TextBlock = () => <EditableText multiline minLines={3} placeholder='Insert text here...' />;\n\nexport default TextBlock;\n","import Title from './components/Title';\nimport Author from './components/Author';\nimport DateComponent from './components/Date';\nimport TextBlock from './components/TextBlock';\n\nexport const widgets = {\n  'title': { id: 'title', component: <Title />, content: 'Title' },\n  'author': { id: 'author', component: <Author />, content: 'Author' },\n  'date': { id: 'date', component: <DateComponent />, content: 'Date' },\n  'textBlock': { id: 'textBlock', component: <TextBlock />, content: 'Text Block' },\n};\n\nexport const widgetsEntries = ['title', 'author', 'date', 'textBlock'];\n\nexport const initialDocumentEntries = [];\n\nexport const droppables = {\n  'widgets': {\n    id: 'widgets',\n    title: 'Widgets',\n  },\n  'document': {\n    id: 'document',\n    title: 'Document',\n  },\n};\n","import { Droppable } from 'react-beautiful-dnd';\nimport cn from 'classnames';\n\nimport styles from './Column.module.scss';\n\nconst Column = ({ column, entries, isDropDisabled, className }) => (\n  <div className={cn(styles.container, className)}>\n    <h3 className={styles.title}>{column.title}</h3>\n    <Droppable\n      droppableId={column.id}\n      isDropDisabled={isDropDisabled}\n    >\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n          className={cn(styles.taskList, { [styles.draggingOver]: snapshot.isDraggingOver })}\n        >\n          {entries}\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  </div>\n);\n\nexport default Column;\n","import { Draggable } from 'react-beautiful-dnd';\nimport cn from 'classnames';\nimport { Icon } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\n\nimport styles from './Entry.module.scss';\n\nconst Entry = ({ id, content, index, withDragHandle }) => (\n  <Draggable\n    draggableId={id}\n    index={index}\n  >\n    {(provided, snapshot) => {\n      const containerDragHandleProps = withDragHandle ? {} : provided.dragHandleProps;\n      return (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...containerDragHandleProps}\n          className={cn(styles.container, { [styles.dragging]: snapshot.isDragging })}\n        >\n          {withDragHandle\n            ? <div className={styles.draggable}>\n                <Icon {...provided.dragHandleProps} className={styles.dragHandle} icon={IconNames.ARROWS_VERTICAL} iconSize={12} />\n                {content}\n              </div>\n            : content\n          }\n        </div>\n      );\n    }}\n  </Draggable>\n);\n\nexport default Entry;\n","import { useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { v4 as uuid } from 'uuid';\nimport { widgets, widgetsEntries, initialDocumentEntries, droppables } from './constants';\nimport styles from './App.module.scss';\nimport Column from './components/Column/Column';\nimport Entry from './components/Entry/Entry';\n\nconst WIDGETS = 'widgets';\nconst DOCUMENT = 'document';\n\nconst App = () => {\n  const [documentEntries, setDocumentEntries] = useState(initialDocumentEntries);\n\n  /*\n  const onDragStart = () => {\n    document.body.style.color = 'orange';\n    document.body.style.transition = 'background-color 0.2s ease';\n  }\n\n  const onDragUpdate = (update) => {\n    const { destination } = update;\n    const opacity = destination\n      ? destination.index / Object.keys(data.widgets).length\n      : 0;\n    document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n  }\n  */\n\n  const onDragEnd = (result) => {\n    //document.body.style.color = 'inherit';\n    //document.body.style.backgroundColor = 'inherit';\n    const { destination, source, draggableId } = result;\n    if (!destination) return;\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\n    if (destination.droppableId === WIDGETS) return;\n\n    const start = droppables[source.droppableId] ;\n    const finish = droppables[destination.droppableId];\n\n    const newDocumentEntries = Array.from(documentEntries);\n    if (start === finish) {\n      // Dragging within the Document\n      const movingEntry = newDocumentEntries[source.index];\n      newDocumentEntries.splice(source.index, 1);\n      newDocumentEntries.splice(destination.index, 0, movingEntry);\n    } else {\n      // Dragging from Widgets to Document\n      newDocumentEntries.splice(destination.index, 0, { id: uuid(), type: draggableId });\n    }\n    setDocumentEntries(newDocumentEntries);\n  };\n\n  return (\n    <DragDropContext\n      //onDragStart={onDragStart}\n      //onDragUpdate={onDragUpdate}\n      onDragEnd={onDragEnd}\n    >\n      <div className={styles.container}>\n        <Column\n          key={WIDGETS}\n          column={droppables[WIDGETS]}\n          entries={widgetsEntries.map((entryId, index) =>\n            <Entry key={entryId} id={entryId} content={widgets[entryId].content} index={index} />\n          )}\n          isDropDisabled={true}\n        />\n        <Column\n          key={DOCUMENT}\n          className={styles.document}\n          column={droppables[DOCUMENT]}\n          entries={documentEntries.map((entry, index) =>\n            <Entry key={entry.id} id={entry.id} withDragHandle content={widgets[entry.type].component} index={index} />\n          )}\n        />\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Column_container__3jSDY\",\"title\":\"Column_title__3H1xg\",\"taskList\":\"Column_taskList__2g6nx\",\"draggingOver\":\"Column_draggingOver__3h8A6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Entry_container__1Ish0\",\"dragging\":\"Entry_dragging__2wyyC\",\"draggable\":\"Entry_draggable__gUg6V\",\"dragHandle\":\"Entry_dragHandle__6eS0c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__eSJ6i\",\"document\":\"App_document__3kEIu\"};"],"sourceRoot":""}