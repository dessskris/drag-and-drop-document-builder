{"version":3,"sources":["components/Entry/Entry.module.scss","components/Title.js","components/Author.js","components/Date.js","components/TextBlock/TextBlock.js","components/Chart.js","components/Table/Table.js","components/EditableTable.js","constants.js","components/Column/Column.js","components/Entry/Entry.js","components/App/App.js","index.js","components/Column/Column.module.scss","components/App/App.module.scss","components/Entry/Entry.print.module.scss","components/App/App.print.module.scss","components/TextBlock/TextBlock.module.scss","components/Table/Table.module.scss","components/Column/Column.print.module.scss"],"names":["module","exports","Title","placeholder","Author","defaultValue","DateComponent","Date","TextBlock","className","styles","editableText","multiline","minLines","options","chart","type","title","text","series","data","Chart","highcharts","Highcharts","Table","columns","useMemo","Header","accessor","width","product","qty","price","useTable","useBlockLayout","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","table","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","EditableTable","editorRef","useRef","apiKey","process","onInit","_evt","editor","current","initialValue","init","height","menubar","plugins","toolbar","content_style","widgets","id","component","label","widgetsEntries","initialDocumentEntries","droppables","Column","entries","isDropDisabled","rightElement","cn","container","header","printStyles","hidden","droppableId","provided","snapshot","ref","innerRef","droppableProps","taskList","draggingOver","isDraggingOver","Entry","content","index","withDragHandle","onDeleteEntry","draggableId","containerDragHandleProps","dragHandleProps","draggableProps","dragging","isDragging","draggable","utils","dragHandle","icon","IconNames","ARROWS_VERTICAL","intent","Intent","PRIMARY","minimal","onClick","TRASH","DANGER","WIDGETS","DOCUMENT","App","useState","documentEntries","setDocumentEntries","printRef","onDragEnd","result","destination","source","start","finish","newDocumentEntries","Array","from","movingEntry","splice","uuid","entryId","document","trigger","entry","deleteDocumentEntry","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.7d23fc71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Entry_container__1Ish0\",\"dragging\":\"Entry_dragging__2wyyC\",\"draggable\":\"Entry_draggable__gUg6V\",\"utils\":\"Entry_utils__2Wyfv\",\"dragHandle\":\"Entry_dragHandle__6eS0c\"};","import { EditableText } from '@blueprintjs/core';\n\nconst Title = () => <h1><EditableText placeholder='Title' /></h1>;\n\nexport default Title;\n","import { EditableText } from '@blueprintjs/core';\n\nconst Author = () => <h3><EditableText defaultValue='Author: Desy Kristianti (@dessskris)' /></h3>;\n\nexport default Author;\n","import { EditableText } from '@blueprintjs/core';\n\nconst DateComponent = () => <h3><EditableText defaultValue={`Date: ${Date()}`} /></h3>;\n\nexport default DateComponent;\n","import { EditableText } from '@blueprintjs/core';\n\nimport styles from './TextBlock.module.scss';\n\nconst TextBlock = () =>\n  <EditableText\n    className={styles.editableText}\n    multiline\n    minLines={3}\n    placeholder='Insert text here...'\n  />;\n\nexport default TextBlock;\n","import Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nconst options = {\n  chart: {\n    type: 'spline'\n  },\n  title: {\n    text: 'Beautiful Chart'\n  },\n  series: [\n    {\n      data: [1, 2, 1, 4, 3, 6]\n    }\n  ]\n};\n\nconst Chart = () => <HighchartsReact highcharts={Highcharts} options={options} />;\n\nexport default Chart;\n","import { useMemo } from 'react';\nimport { useTable, useBlockLayout } from 'react-table';\n\nimport styles from './Table.module.scss';\n\nconst Table = () => {\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Product',\n        accessor: 'product',\n        width: 200,\n      },\n      {\n        Header: 'Quantity',\n        accessor: 'qty',\n        width: 200,\n      },\n      {\n        Header: 'Price (Â£)',\n        accessor: 'price',\n        width: 200,\n      },\n    ],\n    []\n  );\n\n  const data = useMemo(\n    () => [\n      {\n        product: 'Table',\n        qty: 20,\n        price: 100,\n      },\n      {\n        product: 'Chair',\n        qty: 100,\n        price: 30,\n      },\n      {\n        product: 'Wardrobe',\n        qty: 50,\n        price: 80,\n      }\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n    columns,\n    data,\n    },\n    useBlockLayout\n  );\n\n  return (\n    <div className={styles.table}>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useRef } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\n\nconst EditableTable = () => {\n  const editorRef = useRef(null);\n  return (\n    <Editor\n      apiKey={process.env.REACT_APP_TINYMCE_API_KEY}\n      onInit={(_evt, editor) => editorRef.current = editor}\n      initialValue={`\n        <h2>Income and Expenditure</h2>\n        <table style=\"border-collapse: collapse; width: 100%;\" border=\"1\">\n          <thead>\n            <tr>\n              <th>Income</th>\n              <th>Amount</th>\n              <th>Expenditure</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Salary</td>\n              <td>Â£3,000.00</td>\n              <td></td>\n              <td></td>\n            </tr>\n            <tr>\n              <td>Savings</td>\n              <td>Â£500.00</td>\n              <td></td>\n              <td></td>\n            </tr>\n            <tr>\n              <td>Additional income</td>\n              <td>Â£200.00</td>\n              <td></td>\n              <td></td>\n            </tr>\n          </tbody>\n        </table>\n      `}\n      init={{\n        height: 300,\n        menubar: false,\n        plugins: [\n          'advlist autolink lists link image charmap print preview anchor',\n          'searchreplace visualblocks code fullscreen',\n          'insertdatetime media table paste code help wordcount'\n        ],\n        toolbar: 'undo redo | formatselect | ' +\n        'bold italic backcolor | alignleft aligncenter ' +\n        'alignright alignjustify | bullist numlist outdent indent | ' +\n        'removeformat | help',\n        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n      }}\n    />\n  );\n}\n\nexport default EditableTable;\n","import Title from './components/Title';\nimport Author from './components/Author';\nimport DateComponent from './components/Date';\nimport TextBlock from './components/TextBlock/TextBlock';\nimport Chart from './components/Chart';\nimport Table from './components/Table/Table';\nimport EditableTable from './components/EditableTable';\n\nexport const widgets = {\n  'title': { id: 'title', component: <Title />, label: 'Title' },\n  'author': { id: 'author', component: <Author />, label: 'Author' },\n  'date': { id: 'date', component: <DateComponent />, label: 'Date' },\n  'textBlock': { id: 'textBlock', component: <TextBlock />, label: 'Text Block' },\n  'chart': { id: 'chart', component: <Chart />, label: 'Chart (Highcharts)' },\n  'table': { id: 'table', component: <Table />, label: 'Table (React Table)' },\n  'editableTable': { id: 'editableTable', component: <EditableTable />, label: 'Editable Table (TinyMCE)' },\n};\n\nexport const widgetsEntries = ['title', 'author', 'date', 'textBlock', 'chart', 'table', 'editableTable'];\n\nexport const initialDocumentEntries = [];\n\nexport const droppables = {\n  'widgets': {\n    id: 'widgets',\n    title: 'Widgets',\n  },\n  'document': {\n    id: 'document',\n    title: 'Document',\n  },\n};\n","import { Droppable } from 'react-beautiful-dnd';\nimport cn from 'classnames';\n\nimport styles from './Column.module.scss';\nimport printStyles from './Column.print.module.scss';\n\nconst Column = ({ column, entries, isDropDisabled, className, rightElement }) => (\n  <div className={cn(styles.container, className)}>\n    <div className={cn(styles.header, printStyles.hidden)}>\n      <h3>{column.title}</h3>\n      {rightElement}\n    </div>\n    <Droppable\n      droppableId={column.id}\n      isDropDisabled={isDropDisabled}\n    >\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n          className={cn(styles.taskList, { [styles.draggingOver]: snapshot.isDraggingOver })}\n        >\n          {entries}\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  </div>\n);\n\nexport default Column;\n","import { Draggable } from 'react-beautiful-dnd';\nimport cn from 'classnames';\nimport { Button, Intent } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\n\nimport styles from './Entry.module.scss';\nimport printStyles from './Entry.print.module.scss';\n\nconst Entry = ({ id, content, index, withDragHandle, onDeleteEntry }) => (\n  <Draggable\n    draggableId={id}\n    index={index}\n  >\n    {(provided, snapshot) => {\n      const containerDragHandleProps = withDragHandle ? {} : provided.dragHandleProps;\n      return (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...containerDragHandleProps}\n          className={cn(styles.container, printStyles.container, { [styles.dragging]: snapshot.isDragging })}\n        >\n          {withDragHandle\n            ? <div className={styles.draggable}>\n                <div className={cn(styles.utils, printStyles.hidden)}>\n                  <Button\n                    {...provided.dragHandleProps}\n                    className={styles.dragHandle}\n                    icon={IconNames.ARROWS_VERTICAL}\n                    intent={Intent.PRIMARY}\n                    minimal\n                  />\n                  <Button\n                    onClick={onDeleteEntry}\n                    icon={IconNames.TRASH}\n                    intent={Intent.DANGER}\n                    minimal\n                  />\n                </div>\n                {content}\n              </div>\n            : content\n          }\n        </div>\n      );\n    }}\n  </Draggable>\n);\n\nexport default Entry;\n","import { useRef, useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport ReactToPrint from 'react-to-print';\nimport cn from 'classnames';\nimport { v4 as uuid } from 'uuid';\nimport { Button, Divider } from '@blueprintjs/core';\nimport { widgets, widgetsEntries, initialDocumentEntries, droppables } from '../../constants';\nimport Column from '../Column/Column';\nimport Entry from '../Entry/Entry';\nimport styles from './App.module.scss';\nimport printStyles from './App.print.module.scss';\n\nconst WIDGETS = 'widgets';\nconst DOCUMENT = 'document';\n\nconst App = () => {\n  const [documentEntries, setDocumentEntries] = useState(initialDocumentEntries);\n  const printRef = useRef();\n  /*\n  const onDragStart = () => {\n    document.body.style.color = 'orange';\n    document.body.style.transition = 'background-color 0.2s ease';\n  }\n\n  const onDragUpdate = (update) => {\n    const { destination } = update;\n    const opacity = destination\n      ? destination.index / Object.keys(data.widgets).length\n      : 0;\n    document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n  }\n  */\n\n  const onDragEnd = (result) => {\n    //document.body.style.color = 'inherit';\n    //document.body.style.backgroundColor = 'inherit';\n    const { destination, source, draggableId } = result;\n    if (!destination) return;\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\n    if (destination.droppableId === WIDGETS) return;\n\n    const start = droppables[source.droppableId] ;\n    const finish = droppables[destination.droppableId];\n\n    const newDocumentEntries = Array.from(documentEntries);\n    if (start === finish) {\n      // Dragging within the Document\n      const movingEntry = newDocumentEntries[source.index];\n      newDocumentEntries.splice(source.index, 1);\n      newDocumentEntries.splice(destination.index, 0, movingEntry);\n    } else {\n      // Dragging from Widgets to Document\n      newDocumentEntries.splice(destination.index, 0, { id: uuid(), type: draggableId });\n    }\n    setDocumentEntries(newDocumentEntries);\n  };\n\n  const deleteDocumentEntry = (index) => {\n    const newDocumentEntries = Array.from(documentEntries);\n    newDocumentEntries.splice(index, 1);\n    setDocumentEntries(newDocumentEntries);\n  };\n\n  return (\n    <DragDropContext\n      //onDragStart={onDragStart}\n      //onDragUpdate={onDragUpdate}\n      onDragEnd={onDragEnd}\n    >\n      <div ref={printRef} className={styles.container}>\n        <Column\n          key={WIDGETS}\n          className={cn(styles.widgets, printStyles.hidden)}\n          column={droppables[WIDGETS]}\n          entries={widgetsEntries.map((entryId, index) =>\n            <Entry key={entryId} id={entryId} content={widgets[entryId].label} index={index} />\n          )}\n          isDropDisabled={true}\n        />\n        <Divider className={printStyles.hidden} />\n        <Column\n          key={DOCUMENT}\n          className={styles.document}\n          column={droppables[DOCUMENT]}\n          rightElement={\n            <ReactToPrint\n              trigger={() => <Button text=\"Save as PDF\" />}\n              content={() => printRef.current}\n            />\n          }\n          entries={documentEntries.map((entry, index) =>\n            <Entry\n              key={entry.id}\n              id={entry.id}\n              withDragHandle\n              content={widgets[entry.type].component}\n              index={index}\n              onDeleteEntry={() => deleteDocumentEntry(index)}\n            />\n          )}\n        />\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport App from './components/App/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Column_container__3jSDY\",\"header\":\"Column_header__3XPiy\",\"taskList\":\"Column_taskList__2g6nx\",\"draggingOver\":\"Column_draggingOver__3h8A6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2i36C\",\"document\":\"App_document__Z_-t-\",\"widgets\":\"App_widgets__2X1Xm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Entry_print_container__1gyuC\",\"hidden\":\"Entry_print_hidden__29N0J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hidden\":\"App_print_hidden__1UVMj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableText\":\"TextBlock_editableText__2iMY2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__2OuB7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hidden\":\"Column_print_hidden__2a-Qx\"};"],"sourceRoot":""}